<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creating.dao.mapper.goods.GoodsEtyMapper">
	<resultMap id="BaseResultMap" type="com.creating.dao.mapper.entity.goods.GoodsEty">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="code" jdbcType="VARCHAR" property="code"/>
		<result column="brand" jdbcType="VARCHAR" property="brand"/>
		<result column="model" jdbcType="VARCHAR" property="model"/>
		<result column="amount" jdbcType="REAL" property="amount"/>
		<result column="units" jdbcType="VARCHAR" property="units"/>
		<result column="type" jdbcType="VARCHAR" property="type"/>
		<result column="sid" jdbcType="INTEGER" property="sid"/>
		<result column="scode" jdbcType="VARCHAR" property="scode"/>
		<result column="sname" jdbcType="VARCHAR" property="sname"/>
		<result column="remark" jdbcType="VARCHAR" property="remark"/>
	</resultMap>
	<sql id="Base_Column_List">
		id, name, code, brand, model, amount, units, type, sid, scode, sname, remark
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from t_goods
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		DELETE FROM t_goods
		WHERE id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.creating.dao.mapper.entity.goods.GoodsEty">
		INSERT INTO t_goods (id, name, code,
		                     brand, model, amount,
		                     units, type, sid, scode,
		                     sname, remark)
		VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
		                                #{brand,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{amount,jdbcType=REAL},
		                                #{units,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{sid,jdbcType=INTEGER},
		                                #{scode,jdbcType=VARCHAR},
		                                #{sname,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.creating.dao.mapper.entity.goods.GoodsEty">
		insert into t_goods
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="brand != null">
				brand,
			</if>
			<if test="model != null">
				model,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="units != null">
				units,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="sid != null">
				sid,
			</if>
			<if test="scode != null">
				scode,
			</if>
			<if test="sname != null">
				sname,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="brand != null">
				#{brand,jdbcType=VARCHAR},
			</if>
			<if test="model != null">
				#{model,jdbcType=VARCHAR},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=REAL},
			</if>
			<if test="units != null">
				#{units,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="scode != null">
				#{scode,jdbcType=VARCHAR},
			</if>
			<if test="sname != null">
				#{sname,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.creating.dao.mapper.entity.goods.GoodsEty">
		update t_goods
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="brand != null">
				brand = #{brand,jdbcType=VARCHAR},
			</if>
			<if test="model != null">
				model = #{model,jdbcType=VARCHAR},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=REAL},
			</if>
			<if test="units != null">
				units = #{units,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				sid = #{sid,jdbcType=INTEGER},
			</if>
			<if test="scode != null">
				scode = #{scode,jdbcType=VARCHAR},
			</if>
			<if test="sname != null">
				sname = #{sname,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.creating.dao.mapper.entity.goods.GoodsEty">
		UPDATE t_goods
		SET name   = #{name,jdbcType=VARCHAR},
			code   = #{code,jdbcType=VARCHAR},
			brand  = #{brand,jdbcType=VARCHAR},
			model  = #{model,jdbcType=VARCHAR},
			amount = #{amount,jdbcType=REAL},
			units  = #{units,jdbcType=VARCHAR},
			type   = #{type,jdbcType=VARCHAR},
			sid    = #{sid,jdbcType=INTEGER},
			scode  = #{scode,jdbcType=VARCHAR},
			sname  = #{sname,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR}
		WHERE id = #{id,jdbcType=INTEGER}
	</update>

	<select id="queryGoods" parameterType="com.creating.dao.mapper.entity.goods.GoodsEty"
	        resultType="com.creating.dao.mapper.entity.goods.GoodsEty">
		select * from t_goods
		<where>
			<if test="name != null">
				and (name like '%${name}%' or brand like '%${name}%' or model like '%${name}%')
			</if>
			<if test="code != null">
				and code like '%${code}%'
			</if>
			<if test="brand != null">
				and brand like '%${brand}%'
			</if>
			<if test="model != null">
				and model like '%${model}%'
			</if>
			<if test="type != null">
				and type = #{type}
			</if>
			<if test="sid != null">
				and sid = #{sid}
			</if>
			<if test="scode != null">
				scode like '%${scode}%'
			</if>
			<if test="sname != null">
				sname like '%${sname}%'
			</if>
			<if test="sval != null">
				and amount >= #{sval}
			</if>
			<if test="eval != null">
				and #{eval} >= amount
			</if>
		</where>
	</select>
	<select id="queryBrands" resultType="map">
		SELECT brand
		FROM
			t_goods
		WHERE
			brand IS NOT NULL
		GROUP BY
			brand
	</select>
	<select id="queryModels" resultType="map">
		SELECT model
		FROM
			t_goods
		WHERE
			model IS NOT NULL
		GROUP BY
			model
	</select>
	<select id="queryGoodsUnits" resultType="map">
		SELECT units
		FROM
			t_goods
		WHERE
			units IS NOT NULL
		GROUP BY
			units
	</select>
	<select id="queryGoodsTypes" resultType="map">
		SELECT type
		FROM
			t_goods
		WHERE
			type IS NOT NULL
		GROUP BY
			type
	</select>
	<update id="minusGoods" parameterType="com.creating.dao.mapper.entity.goods.GoodsEty">
		UPDATE t_goods
		SET amount = (amount - #{amount})
		WHERE id = #{id}
	</update>
</mapper>